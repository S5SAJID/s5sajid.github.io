---
const socialLinks = [
    {
        name: "GitHub",
        url: "https://github.com/s5sajid",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>
        </svg>`
    },
    {
        name: "Email",
        url: "mailto:s5sajidyt@gmail.com",
        icon: `<svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M4 4H20C21.1 4 22 4.9 22 6V18C22 19.1 21.1 20 20 20H4C2.9 20 2 19.1 2 18V6C2 4.9 2.9 4 4 4Z" stroke="currentColor" stroke-width="2"/>
            <path d="M22 6L12 13L2 6" stroke="currentColor" stroke-width="2"/>
        </svg>`
    },
    {
        name: "YouTube",
        url: "https://www.youtube.com/@s5sajid",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"></path>
            <polygon points="9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02"></polygon>
        </svg>`
    },
    {
        name: "Website",
        url: "https://s5sajid.github.io",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="2" y1="12" x2="22" y2="12"></line>
            <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path>
        </svg>`
    }
];
---

<section id="contact" class="py-20 border-t border-black">
    <div class="container mx-auto px-6">
        <h2 class="section-title font-bold mb-20">GET IN TOUCH</h2>
        
        <div class="flex flex-col md:flex-row gap-12">
            <div class="md:w-1/2">
                <p class="text-xl mb-8">Have a project in mind or just want to chat about design and development? I'm always open to interesting conversations and collaborations.</p>
                
                <div class="space-y-4">
                    <div class="flex items-center gap-4">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M4 4H20C21.1 4 22 4.9 22 6V18C22 19.1 21.1 20 20 20H4C2.9 20 2 19.1 2 18V6C2 4.9 2.9 4 4 4Z" stroke="black" stroke-width="2"/>
                            <path d="M22 6L12 13L2 6" stroke="black" stroke-width="2"/>
                        </svg>
                        <a href="mailto:s5sajidyt@gmail.com" class="hover:underline">s5sajidyt@gmail.com</a>
                    </div>
                    <div class="flex items-center gap-4">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z" stroke="black" stroke-width="2"/>
                            <path d="M8 3H9C7.67392 3 6.40215 3.52678 5.46447 4.46447C4.52678 5.40215 4 6.67392 4 8V9" stroke="black" stroke-width="2"/>
                            <path d="M20 8V9C20 7.67392 19.4732 6.40215 18.5355 5.46447C17.5979 4.52678 16.3261 4 15 4H16" stroke="black" stroke-width="2"/>
                            <path d="M4 16V15C4 16.3261 4.52678 17.5979 5.46447 18.5355C6.40215 19.4732 7.67392 20 9 20H8" stroke="black" stroke-width="2"/>
                            <path d="M16 20H15C16.3261 20 17.5979 19.4732 18.5355 18.5355C19.4732 17.5979 20 16.3261 20 15V16" stroke="black" stroke-width="2"/>
                        </svg>
                        <a href="https://s5sajid.github.io" class="hover:underline">s5sajid.github.io</a>
                    </div>
                </div>
                
                <div class="mt-12">
                    <h3 class="text-xl font-bold mb-4">Connect With Me</h3>
                    <div class="flex gap-4">
                        {socialLinks.map(link => (
                            <a href={link.url} class="w-10 h-10 border border-black rounded-full flex items-center justify-center hover:bg-black hover:text-white transition-all duration-300" set:html={link.icon} />
                        ))}
                    </div>
                </div>
            </div>
            
            <div class="md:w-1/2">
                <form id="contactForm" action="https://formspree.io/f/xzzeyjeb" method="POST" class="space-y-6">
                    <div>
                        <label for="name" class="block text-sm font-medium mb-1">Name</label>
                        <input type="text" id="name" name="name" class="contact-input w-full py-2 bg-transparent outline-none" placeholder="Your name">
                    </div>
                    <div>
                        <label for="email" class="block text-sm font-medium mb-1">Email</label>
                        <input type="email" id="email" name="email" class="contact-input w-full py-2 bg-transparent outline-none" placeholder="your@email.com">
                    </div>
                    <div>
                        <label for="message" class="block text-sm font-medium mb-1">Message</label>
                        <textarea id="message" name="message" rows="5" class="contact-input w-full py-2 bg-transparent outline-none" placeholder="What would you like to discuss?"></textarea>
                    </div>
                    <button type="submit" class="submit-btn w-full py-3 bg-black text-white hover:bg-white hover:text-black border border-black transition-all duration-300 flex items-center justify-center gap-2">
                        <span>Send Message</span>
                        <svg class="animate-spin h-5 w-5 hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                    </button>
                    <div id="formStatus" class="text-center mt-4 hidden">
                        <p id="successMessage" class="text-green-600 hidden">Message sent successfully!</p>
                        <p id="errorMessage" class="text-red-600 hidden">Oops! There was an error. Please try again.</p>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<style>
    .section-title {
        font-size: 7vw;
        line-height: 0.9;
        letter-spacing: -0.05em;
    }

    .contact-input {
        border-bottom: 1px solid #000;
        transition: all 0.3s ease;
    }
    
    .contact-input:focus {
        border-bottom-width: 2px;
    }

    @media (max-width: 768px) {
        .section-title {
            font-size: 12vw;
        }
    }
</style>

<script>
    const form = document.getElementById('contactForm') as HTMLFormElement;
    const formStatus = document.getElementById('formStatus') as HTMLElement;
    const successMessage = document.getElementById('successMessage') as HTMLElement;
    const errorMessage = document.getElementById('errorMessage') as HTMLElement;
    const submitButton = form?.querySelector('.submit-btn') as HTMLButtonElement;
    const submitText = submitButton?.querySelector('span') as HTMLElement;
    const loadingSpinner = submitButton?.querySelector('svg') as SVGElement;

    if (form) {
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            // Show loading state
            if (submitButton && submitText && loadingSpinner) {
                submitButton.disabled = true;
                submitText.textContent = 'Sending...';
                loadingSpinner.classList.remove('hidden');
            }
            
            try {
                const formData = new FormData(form);
                const response = await fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'Accept': 'application/json'
                    }
                });

                if (response.ok) {
                    // Show success message
                    formStatus.classList.remove('hidden');
                    successMessage.classList.remove('hidden');
                    errorMessage.classList.add('hidden');
                    form.reset();
                } else {
                    // Show error message
                    throw new Error('Form submission failed');
                }
            } catch (error) {
                formStatus.classList.remove('hidden');
                errorMessage.classList.remove('hidden');
                successMessage.classList.add('hidden');
            } finally {
                // Reset button state
                if (submitButton && submitText && loadingSpinner) {
                    submitButton.disabled = false;
                    submitText.textContent = 'Send Message';
                    loadingSpinner.classList.add('hidden');
                }
            }
        });
    }
</script>
